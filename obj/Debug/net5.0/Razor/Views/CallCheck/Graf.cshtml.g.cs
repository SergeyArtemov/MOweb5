#pragma checksum "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fd810619d9e09bd3ac7704a7276fe0992ccb6fdf"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CallCheck_Graf), @"mvc.1.0.view", @"/Views/CallCheck/Graf.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\ProjectsCLR\MOweb5\Views\_ViewImports.cshtml"
using MOweb;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\ProjectsCLR\MOweb5\Views\_ViewImports.cshtml"
using MOweb.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fd810619d9e09bd3ac7704a7276fe0992ccb6fdf", @"/Views/CallCheck/Graf.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b2d30cf7c1d6b26fe04ddad4dd9ba2f82def1db6", @"/Views/_ViewImports.cshtml")]
    public class Views_CallCheck_Graf : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("    <!--Layout = \"_layout\";-->\r\n");
#nullable restore
#line 3 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<meta http-equiv=\"REFRESH\" content=\"60;\" />\r\n\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fd810619d9e09bd3ac7704a7276fe0992ccb6fdf3269", async() => {
                WriteLiteral(@"
    <input type=""button"" onclick=""history.back();"" value=""Назад"" />


    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.bundle.min.js""></script>

    <script type=""text/javascript"" src=""js/stats_tab.js""></script>

    <!-- Готовим контейнер для диаграммы -->
    <div id=""content"" align=""left"">
        <canvas id=""myChart"" width=""870"" height=""500""></canvas>
    </div>

    <script type=""text/javascript"">

            var JArr1 = """);
#nullable restore
#line 25 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
                    Write(ViewBag.Arr1);

#line default
#line hidden
#nullable disable
                WriteLiteral("\"\r\n            var q1 = JArr1.split(\",\");\r\n            var JArr2 = \"");
#nullable restore
#line 27 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
                    Write(ViewBag.Arr2);

#line default
#line hidden
#nullable disable
                WriteLiteral("\"\r\n            var q2 = JArr2.split(\",\");\r\n            var JArr3 = \"");
#nullable restore
#line 29 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
                    Write(ViewBag.Arr3);

#line default
#line hidden
#nullable disable
                WriteLiteral("\"\r\n            var q3 = JArr3.split(\",\");\r\n            var JArr4 = \"");
#nullable restore
#line 31 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
                    Write(ViewBag.Arr4);

#line default
#line hidden
#nullable disable
                WriteLiteral("\"\r\n            var q4 = JArr4.split(\",\");\r\n            var JArr5 = \"");
#nullable restore
#line 33 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
                    Write(ViewBag.Arr5);

#line default
#line hidden
#nullable disable
                WriteLiteral("\"\r\n            var q5 = JArr5.split(\",\");\r\n            var JArr6 = \"");
#nullable restore
#line 35 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
                    Write(ViewBag.Arr6);

#line default
#line hidden
#nullable disable
                WriteLiteral("\"\r\n            var q6 = JArr6.split(\",\");\r\n            let w1 = [];\r\n            let w2 = [];\r\n            let w3 = [];\r\n            let w4 = [];\r\n            let w5 = [];\r\n            let w6 = [];\r\n            for (var i = 0; i < ");
#nullable restore
#line 43 "C:\ProjectsCLR\MOweb5\Views\CallCheck\Graf.cshtml"
                           Write(ViewBag.Countrow);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"; i++) {
                w1.push(q1[i]);
                w2.push(q2[i]);
                w3.push(q3[i]);
                w4.push(q4[i]);
                w5.push(q5[i]);
                w6.push(q6[i]);
            }

        //Готовим диаграмму
        function Diagram() {
            var ctx = document.getElementById(""myChart"");
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: w1, //Подписи оси x
                    datasets: [
                        {
                            label: ""Дл.звонка  "",
                            data: w2, //Данные
                            borderColor: 'DarkViolet', //Цвет
                            borderWidth: 2, //Толщина линии
                            pointBorderColor: 'transparent',
                            pointBackgroundColor: 'transparent',
                            fill: false //Не заполнять под графиком
                        },
                        ");
                WriteLiteral(@"{
                            label: ""Дл.задачи  "",
                            data: w3, //Данные
                            borderColor: 'blue', //Цвет
                            borderWidth: 2, //Толщина линии
                            pointBorderColor: 'transparent',
                            pointBackgroundColor: 'transparent',
                            fill: false //Не заполнять под графиком
                        },
                        {
                            label: ""% выполнения  "",
                            data: w4, //Данные
                            borderColor: 'Green', //Цвет
                            borderWidth: 2, //Толщина линии
                            pointBorderColor: 'transparent',
                            pointBackgroundColor: 'transparent',
                            fill: false //Не заполнять под графиком
                        },
                        {
                            label: ""Max Свободен  "",
                         ");
                WriteLiteral(@"   data: w5, //Данные
                            borderColor: 'LightSalmon', //Цвет
                            borderWidth: 2, //Толщина линии
                            pointBorderColor: 'transparent',
                            pointBackgroundColor: 'transparent',
                            fill: false //Не заполнять под графиком
                        },
                        {
                            label: ""Max Ожидание"",
                            data: w6, //Данные
                            borderColor: 'Red', //Цвет
                            borderWidth: 2, //Толщина линии
                            pointBorderColor: 'transparent',
                            pointBackgroundColor: 'transparent',
                            fill: false //Не заполнять под графиком
                        }
                        //Можно добавить другие графики
                    ]
                },
                options: {
                    title: {
                       di");
                WriteLiteral(@"splay: true,
                        text: 'AutoCall Check - графика',
                        fontSize: 20
                    },
                    animation: {
                        duration: 0
                    },
                    //tooltips: {
                    //    enabled: false
                    //  },
                    responsive: false, //Вписывать в размер canvas
                    scales: {
                        xAxes: [{
                            display: true
                        }],
                        yAxes: [{
                            display: true
                        }]
                    }
                }
            });
            //Обновляем
            myChart.update();

        }

        //Ставим загрузку диаграммы на событие загрузки страницы
        window.addEventListener(""load"", Diagram);
    </script>
    <noscript>
        <div align=""center"">
            Извините, для работы приложения нужен включённый Javascri");
                WriteLiteral("pt\r\n        </div>\r\n    </noscript>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
